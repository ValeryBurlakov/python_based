# –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∫–ª–∞—Å—Å –ê—Ä—Ö–∏–≤ –∏–∑ –∑–∞–¥–∞—á–∏ 2.
# üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞
# –∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.


class Archive:
    '''
    –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –∫–ª–∞—Å—Å–∞ –∞—Ä—Ö–∏–≤
    '''
    _instance = None

    def __new__(cls, num, string):
        '''
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –º–µ—Ç–æ–¥–∞ __new__:
        '''
        if cls._instance is None:
            cls._instance = super().__new__(cls)
            cls._instance.archive_text = []
            cls._instance.archive_numbers = []
        else:
            cls._instance.archive_text.append(cls._instance.string)
            cls._instance.archive_numbers.append(cls._instance.num)

        return cls._instance

    def __init__(self, num: int | float, string: str):
        '''
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –º–µ—Ç–æ–¥–∞ __init__
        :param num:
        :param string:
        '''
        self.num = num
        self.string = string

    def __str__(self):
        return f'—Å—Ç—Ä–æ–∫–∞ —ç—Ç–æ = {self.string}. –ù–æ–º–µ—Ä = {self.num}. –ê—Ä—Ö–∏–≤ —Å—Ç—Ä–æ–∫ = {self.archive_text}. ' \
                f'–ê—Ä—Ö–∏–≤ —á–∏—Å–µ–ª = {self.archive_numbers}'

    def __repr__(self):
        return f'Archive("{self.string}", {self.num})'



# help(Archive)
archive = Archive(5, "–¥–æ–º")
archive_2 = Archive(4, "–¥–æ–º_2")
print(archive)

print(repr(archive_2))
# print(archive.archive_text)
# print(archive_2.archive_numbers)
