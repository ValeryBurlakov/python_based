# –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
# –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
# üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.

class Rectangle:
    def __init__(self, length, width=None):
        self.length = length
        if width:
            self.width = width
        else:
            self.width = length

    def perimetr(self):
        return 2 * (self.length + self.width)

    def square(self):
        return self.width * self.length

    def __add__(self, other):
        perimeter = self.perimetr() + other.perimetr()
        width = self.width + other.width
        length = (perimeter / 2) - width  # –ø–æ–ª—É—á–∏–ª–∏ –¥–ª–∏–Ω—É
        # print(length, self.length + other.length)
        return Rectangle(width, length)

    def __sub__(self, other):
        if self.perimetr() < other.perimetr():
            self, other = other, self
        if self.width > self.length:
            self.width, self.length = self.length, self.width
        if other.width > other.length:
            other.width, other.length = other.length, other.width
        perimeter = self.perimetr() - other.perimetr()
        width = self.width - other.width
        length = (perimeter / 2) - width  # –ø–æ–ª—É—á–∏–ª–∏ –¥–ª–∏–Ω—É
        return Rectangle(width, length)


rectangle = Rectangle(6, 3)
rectangle_2 = Rectangle(3, 5)
c3 = rectangle + rectangle_2
c4 = rectangle - rectangle_2
print(c3.square(), c3.perimetr(), sep='\n')
print(c4.square(), c4.perimetr(), sep='\n')
# print(rectangle.perimetr(), rectangle.square(), sep='\n')
